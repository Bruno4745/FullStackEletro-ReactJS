[{"C:\\reactprojeto\\fullstackeletro\\src\\rotas.js":"1","C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Produto\\index.js":"2","C:\\reactprojeto\\fullstackeletro\\src\\Pages\\pedidos.js":"3","C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Pedidos\\index.js":"4","C:\\reactprojeto\\fullstackeletro\\src\\index.js":"5","C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Rodape\\index.js":"6","C:\\reactprojeto\\fullstackeletro\\src\\Pages\\home.js":"7","C:\\reactprojeto\\fullstackeletro\\src\\Pages\\produtos.js":"8","C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Comentarios\\index.js":"9","C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Menu\\index.js":"10","C:\\reactprojeto\\fullstackeletro\\src\\Pages\\lojas.js":"11","C:\\reactprojeto\\fullstackeletro\\src\\App.js":"12","C:\\reactprojeto\\fullstackeletro\\src\\Pages\\contato.js":"13"},{"size":662,"mtime":1606791190630,"results":"14","hashOfConfig":"15"},{"size":1102,"mtime":1610487896434,"results":"16","hashOfConfig":"15"},{"size":6848,"mtime":1610745900240,"results":"17","hashOfConfig":"15"},{"size":387,"mtime":1610740217922,"results":"18","hashOfConfig":"15"},{"size":193,"mtime":1606760111682,"results":"19","hashOfConfig":"15"},{"size":372,"mtime":1606965421655,"results":"20","hashOfConfig":"15"},{"size":588,"mtime":1606791090482,"results":"21","hashOfConfig":"15"},{"size":2430,"mtime":1610742901825,"results":"22","hashOfConfig":"15"},{"size":239,"mtime":1606967103264,"results":"23","hashOfConfig":"15"},{"size":1622,"mtime":1611951568767,"results":"24","hashOfConfig":"15"},{"size":1212,"mtime":1606966461205,"results":"25","hashOfConfig":"15"},{"size":536,"mtime":1612033178280,"results":"26","hashOfConfig":"15"},{"size":3804,"mtime":1611605075538,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1e1j4r2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},"C:\\reactprojeto\\fullstackeletro\\src\\rotas.js",[],["58","59"],"C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Produto\\index.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\Pages\\pedidos.js",["60"],"import { Form, Button, Container, Table, InputGroup } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport Pedido from '../Componentes/Pedidos';\r\n\r\nexport default function Pedidos(){\r\n    \r\n    //INICIO - buscar pedidos do BD\r\n    const [ pedidos, setPedidos ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fethData() {\r\n            const url = \"http://localhost:3500/mostrar/pedidos\";\r\n            const resposta = await fetch(url);\r\n            const resultado = await resposta.json();\r\n            setPedidos(resultado);\r\n        }\r\n        fethData();\r\n    }, [])\r\n    //FIM - buscar pedidos do BD\r\n\r\n    //INICIO - capturar dados do formulario\r\n    const [dadosForm, setDadosForm] = useState({\r\n        nome_cliente: '',\r\n        endereco: '',\r\n        telefone: '',\r\n        nome_produto: '',\r\n        valor_unit: 0,\r\n        quantidade: 0,\r\n        valor_total: 0\r\n    })\r\n\r\n    function handleChange(evento){\r\n        dadosForm[evento.target.name] = evento.target.value;\r\n        //console.log(dadosForm);\r\n        if(dadosForm.valor_unit > 0 && dadosForm.quantidade > 0){\r\n            atualizaTotal();\r\n        }\r\n    }\r\n    \r\n    const atualizaTotal = () => { //Funcao para calcular valor total automaticamente (valor unit * qtd)\r\n        dadosForm.valor_total = parseFloat(dadosForm.valor_unit) * parseInt(dadosForm.quantidade);\r\n        document.getElementById(\"valor_total\").value = dadosForm.valor_total;\r\n    }\r\n    //FIM - capturar dados do formulario\r\n\r\n    //INICIO - envia dados do formulario para API inserir no BD\r\n    const enviaPedido = async () => {\r\n        const url = \"http://localhost:3500/inserir/pedidos\";\r\n        await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(dadosForm)\r\n        })\r\n    }\r\n    //FIM - envia dados do formulario para API inserir no BD\r\n\r\n    return(\r\n        <Container>\r\n            <Form onSubmit={enviaPedido} className=\"col-12 col-md-10 mx-auto my-5\">\r\n                <h1>Formulario de Compra</h1>\r\n                <Form.Group>\r\n                    <Form.Label>Nome</Form.Label>\r\n                    <Form.Control id=\"nome_cliente\" name=\"nome_cliente\" className=\"mb-3\" type=\"text\" placeholder=\"Digite seu nome\" onChange={handleChange} required />\r\n                </Form.Group>  \r\n                <Form.Group>\r\n                    <Form.Label>Endereco</Form.Label>\r\n                    <Form.Control id=\"endereco\" name=\"endereco\" className=\"mb-3\" type=\"text\" placeholder=\"Digite seu endereco\" onChange={handleChange} required />\r\n                </Form.Group>  \r\n                <Form.Group>\r\n                    <Form.Label>Telefone</Form.Label>\r\n                    <Form.Control id=\"telefone\" name=\"telefone\" className=\"mb-3\" type=\"text\" placeholder=\"Digite seu telefone\" onChange={handleChange} required />\r\n                </Form.Group>  \r\n                <Form.Group>\r\n                    <Form.Label>Produto</Form.Label>\r\n                        <Form.Control id=\"nome_produto\" name=\"nome_produto\" as=\"select\" onChange={handleChange} required >\r\n                            <option></option>\r\n                            <option>Fogão 5 Bocas Brastemp</option>\r\n                            <option>Fogão Consul 4 bocas cor Inox</option>\r\n                            <option>Geladeira Brastemp Frost Free Duplex 375 litros Inox</option>\r\n                            <option>Geladeira Consul CRE44AK Frost Free Duplex</option>\r\n                            <option>Geladeira Cycle Defrost Inox 475L Electrolux</option>\r\n                            <option>Lava Louças 14 Serviços Brastemp</option>\r\n                            <option>Lava Louças Electrolux 8 Servicos</option>\r\n                            <option>Lavadoura de Roupas Electrolux Automática 13kg</option>\r\n                            <option>Lavadoura de Roupas Samsung WD4000 Inox Look - 11kg</option>\r\n                            <option>Micro-ondas Brastemp 38L com Grill Ative</option>\r\n                            <option>Micro-ondas Electrolux MS37R</option>\r\n                            <option>Micro-ondas Philco 26L</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Valor Unitario</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend className=\"mb-3\">\r\n                        <InputGroup.Text>R$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control id=\"valor_unit\" name=\"valor_unit\" className=\"mb-3\" type=\"number\" step=\"0.01\" placeholder=\"Digite o valor unitario\" onChange={handleChange} required />\r\n                    </InputGroup>\r\n                 </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Quantidade</Form.Label>\r\n                    <Form.Control id=\"quantidade\" name=\"quantidade\" className=\"mb-3\" type=\"number\" min=\"1\" onChange={handleChange} required />\r\n                </Form.Group> \r\n                <Form.Group>\r\n                    <Form.Label>Valor Total</Form.Label>\r\n                    <InputGroup >\r\n                        <InputGroup.Prepend className=\"mb-3\">\r\n                        <InputGroup.Text>R$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control id=\"valor_total\" name=\"valor_total\" className=\"mb-3\" type=\"number\" step=\"0.01\" readOnly />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Button type=\"submit\" variant=\"success\">Enviar</Button>\r\n                    {'  '}\r\n                    <Button type=\"reset\" variant=\"warning\">Limpar</Button>\r\n                </Form.Group>\r\n            </Form>\r\n            <h5>Pedidos Realizados:</h5>\r\n            <Table striped bordered hover fluid>\r\n                <thead>\r\n                    <tr>\r\n                        <th>IdPedido</th>\r\n                        <th>Nome Cliente</th>\r\n                        <th>Endereco</th>\r\n                        <th>Telefone</th>\r\n                        <th>Produto</th>\r\n                        <th>Valor</th>\r\n                        <th>Quantidade</th>\r\n                        <th>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {pedidos && pedidos.map(item => <Pedido key={item.idpedidos} id={item.idpedidos} \r\n                    nome={item.nome_cliente} endereco={item.endereco} telefone={item.telefone} produto={item.nome_produto}\r\n                    valor={item.valor_unit} quantidade={item.quantidade} total={item.valor_total} />)}\r\n                </tbody>\r\n            </Table>\r\n        </Container>\r\n    )\r\n}",["61","62"],"C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Pedidos\\index.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\index.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Rodape\\index.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\Pages\\home.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\Pages\\produtos.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Comentarios\\index.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\Componentes\\Menu\\index.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\Pages\\lojas.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\App.js",[],"C:\\reactprojeto\\fullstackeletro\\src\\Pages\\contato.js",["63"],"import { useEffect, useState } from 'react';\r\nimport { Jumbotron, Container, Form, Button, Table } from 'react-bootstrap';\r\nimport ImgWhats from './imagens/whatsapp.png';\r\nimport ImgEmail from './imagens/email.png';\r\nimport Comentarios from '../Componentes/Comentarios'\r\n\r\nexport default function Contato() {\r\n\r\n    //INICIO - buscar comentarios do BD\r\n    const [comentarios, setComentarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fethData() {\r\n            const url = \"http://localhost:3500/mostrar/comentarios\";\r\n            const resposta = await fetch(url);\r\n            const resultado = await resposta.json();\r\n            setComentarios(resultado);\r\n        }\r\n        fethData();\r\n    }, []);\r\n    //FIM - buscar comentarios do BD\r\n\r\n    //INICIO - capturar dados do formulario\r\n    const [dadosForm, setDadosForm] = useState({\r\n        nome: '',\r\n        mensagem: ''\r\n    });\r\n\r\n    function handleChange(evento){\r\n        dadosForm[evento.target.name] = evento.target.value;\r\n        console.log(dadosForm);\r\n    }\r\n    //FIM - capturar dados do formulario\r\n\r\n    //INICIO - envia dados do formulario para API inserir no BD\r\n    const enviaMensagem = async () => {\r\n\r\n        const url = \"http://localhost:3500/inserir/comentarios\";\r\n        await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(dadosForm)\r\n        }); \r\n    }\r\n    //FIM - envia dados do formulario para API inserir no BD\r\n    \r\n    return(\r\n        <Container>\r\n            <Jumbotron className=\"bg-white pb-2\">\r\n                <h1>Contato</h1>\r\n                <hr className=\"my-4\"/>\r\n                <div className=\"row text-center my-5\">\r\n                    <div className=\"col col-12 col-sm-6 mt-2\">\r\n                        <img src={ImgWhats} alt=\"Email\" width=\"70\"/>\r\n                        <p>contato@fullstackeletro.com</p>\r\n                    </div>\r\n                    <div className=\"col col-12 col-sm-6\">\r\n                        <img src={ImgEmail} alt=\"WhatsApp\" width=\"70\"/>\r\n                        <p>(11) 2222-3333</p>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Form onSubmit={enviaMensagem} className=\"col-12 col-md-10 mx-auto mb-5\">\r\n                <h3>Entre em contato conosco!!!</h3>\r\n                <Form.Group>\r\n                    <Form.Label>Nome</Form.Label>\r\n                    <Form.Control id=\"nome\" name=\"nome\" className=\"mb-3\" type=\"text\" placeholder=\"Digite seu nome\" onChange={handleChange} required />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Mensagem</Form.Label>\r\n                    <Form.Control id=\"mensagem\" name=\"mensagem\" className=\"mb-3\" as=\"textarea\" rows={3} placeholder=\"Digite uma mensagem\" onChange={handleChange} required />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Button type=\"submit\" variant=\"success\">Enviar</Button>\r\n                    {'  '}\r\n                    <Button type=\"reset\" variant=\"warning\">Limpar</Button>\r\n                </Form.Group>\r\n            </Form>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nome</th>\r\n                        <th>Comentario</th>\r\n                        <th>Data</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {comentarios && comentarios.map(item => <Comentarios key={item.idcomentario} id={item.idcomentario} nome={item.nome} comentario={item.mensagem} data={item.data} />)}\r\n                </tbody>\r\n            </Table>\r\n        </Container>\r\n    )\r\n}",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":22,"column":23,"nodeType":"70","messageId":"71","endLine":22,"endColumn":35},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"68","severity":1,"message":"69","line":24,"column":23,"nodeType":"70","messageId":"71","endLine":24,"endColumn":35},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'setDadosForm' is assigned a value but never used.","Identifier","unusedVar",["74"],["75"],"no-global-assign","no-unsafe-negation"]